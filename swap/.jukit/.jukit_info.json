{"cmd": "import numpy as np\nimport pandas as pd\nfrom pprint import pprint\n\n\n# ca jkso; open jukit\n# <leader><space>; send line to output\n# <CR>; exec cell, stay\n# <CR>j; exec cell, move down\n# <CR>k; exec all cells to current\n# <C-b>: split new cell below\n# <leader>cs; split curr cell\n# <leader>j; move to cell below\n# <leader>k; move to cell above\n\n;\n\n#|%%--%%| <lhxMTC6lmw|T3nbgYegtX>\n\n_flr_area = 1660.72\n\n_mats = [\n    {\n        'id': 'itm1',\n        'conductivity': 2.31,\n        'density': 2322.0,\n        'specific_heat': 832.0,\n        'thickness': 0.34,\n        'hc': 0.89; #0.47,\n        'a': _flr_area,\n    }\n];\n\n#|%%--%%| <T3nbgYegtX|y4bPsPRIPp>\n\n# Clean HB json\nmats = [{k:np.array([v]) for k, v in m.items()}\n        for m in _mats]\n\n_cols = {\n    'id': 'id',\n    'conductivity': 'k',\n    'density': 'rho',\n    'specific_heat': 'Cp',\n    'thickness': 'Lc',\n}\ndf = (pd.DataFrame(mats)\n      .rename(columns=_cols))\n\ndf.T\n\n\n#|%%--%%| <y4bPsPRIPp|VKGh4svY7t>\n\n# Calc intermediate values\nfor i in range(0,4):\n    df.loc[i, :] = df.loc[0, :].copy()\n    df.loc[i, 'rho'] = 700.0\n    df.loc[i, 'Lc'] = 0.34 + (0.085 * (i + 1))\n\n#|%%--%%| <VKGh4svY7t|xXouNa9Z6L>\n\n\nomega = 1.0 / 3600.0 # (6.0 * 3600.0); \ndf['v'] = df['a'] * df['Lc']\ndf['U'] = df['k'] / df['Lc']\ndf['xi'] = (df.Lc * df.rho * df.Cp * omega) / df.hc\ndf['eta'] = (df.Lc * df.rho * df.Cp * omega) / df.U\ndf['bi'] = df.hc / df.U\n\ncols = 'Lc xi eta bi'.split(' ')\n\ndf[cols]\n\n\n\n#|%%--%%| <xXouNa9Z6L|HFRfxgEAse>\n\n\n", "cmd_opts": " -s --md_cell_start=r\\\"\\\"\\\"°°°", "import_complete": 1, "terminal": "tmux"}